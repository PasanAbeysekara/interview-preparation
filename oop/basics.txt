1.) What is Object Oriented Programming (OOP)?

    Object Oriented Programming (OOP) is a programming paradigm that focuses 
    on the use of objects to represent and manipulate data. In OOP, 
    data is encapsulated within objects, and objects are defined by 
    their properties (attributes) and behaviors (methods). 
    OOP provides several key concepts that enable developers to write modular, reusable, and maintainable code.

2.) What is an Object?

    To explain what objects are, it’s probably a good idea to start 
    by explaining what objects aren’t. So, programming languages that 
    aren’t object oriented tend to have a stark separation between 
    data and behavior. Basically, you have data represented by data structures, 
    and behavior is implemented by functions that act on said data structures.

    An object is sort of a blend between the two, since it has both data and behavior. 
    Each object represents an instance of a certain domain concept or entity 
    (e.g. a User, a Product, a Transaction), stores the data associated with that instance, 
    and expose methods that potentially change that data.

    A big difference between OOP and non-OOP is that an object 
    should expose behavior and hide most or all of its data. 
    This is part of encapsulation, a key OOP concept we’ll cover in more detail next.